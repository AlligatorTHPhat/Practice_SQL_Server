--23. Khi thêm cầu thủ mới, kiểm tra vị trí trên sản phẩm của cần thủ chỉ thuộc một trong các vị trí sau, Thủ Môn, Tiền Đạo, Tiền Vệ, Trung Vệ, Cận Vệ.
ALTER TABLE CAUTHU
ADD CONSTRAINT CK_VITRI_CAUTHU CHECK (
   VITRI IN (N'Thủ Môn', N'Tiền Đạo', N'Tiền Vệ', N'Trung Vệ', N'Cận Vệ')
)

--24. Khi phân công huấn luyện viên, kiểm tra vai trò của huấn luyện viên, kiểm tra vai trò chính của huấn luyện viên chỉ thuộc một trong các vai trò sau: HLV chính, HLV phụ, HLV thể dục, HLV thủ môn.
ALTER TABLE HLV_CLB 
ADD CONSTRAINT CK_VAITRO_HLV CHECK (
	VAITRO IN (N'HLV chính', N'HLV phụ', N'HLV thể dục', N'HLV thủ môn')
)

--25. Khi thêm cầu thủ mới, kiểm tra cầu thủ đó có tuổi đủ 18 trở lên (chỉ tính năm sinh).
ALTER TABLE CAUTHU
ADD CONSTRAINT CK_TUOI_CAUTHU CHECK (
	DATEDIFF(YEAR,NGAYSINH,GETDATE()) >= 18
)

--26 Số trái bóng mà cầu thủ ghi được phải lớn hơn 0.
ALTER TABLE THAMGIA
ADD CONSTRAINT CK_SOTRAI_GT_0 CHECK (SOTRAI > 0);

--27. Thông tin cầu thủ của đội bóng "SHB Đà Nẵng" có quốc tịch "Brazil"
CREATE VIEW V_CAUTHU_SHB_BRA AS
SELECT 
    CAUTHU.MACT,
    CAUTHU.HOTEN,
    CAUTHU.NGAYSINH,
    CAUTHU.DIACHI,
    CAUTHU.VITRI
FROM 
    CAUTHU
JOIN 
    CAULACBO ON CAUTHU.MACLB = CAULACBO.MACLB
WHERE 
    CAULACBO.TENCLB = N'SHB ĐÀ NẴNG' 
    AND CAUTHU.MAQG = 'BRA';

--28. Kết quả các trận đấu vòng 3 của mùa bóng năm 2009
CREATE VIEW V_TRANDAU_VONG3_2009 AS
SELECT 
    TRANDAU.MATRAN,
    TRANDAU.NGAYTD,
    SANVD.TENSAN,
    CAULACBO1.TENCLB AS TENCLB1,
    CAULACBO2.TENCLB AS TENCLB2,
    TRANDAU.KETQUA
FROM 
    TRANDAU
JOIN 
    SANVD ON TRANDAU.MASAN = SANVD.MASAN
JOIN 
    CAULACBO AS CAULACBO1 ON TRANDAU.MACLB1 = CAULACBO1.MACLB
JOIN 
    CAULACBO AS CAULACBO2 ON TRANDAU.MACLB2 = CAULACBO2.MACLB
WHERE 
    TRANDAU.VONG = 3 AND TRANDAU.NAM = 2009;


--29. Thông tin huấn luyện viên có quốc tịch "Việt Nam
CREATE VIEW V_HUANLUYEN_VIETNAM AS
SELECT 
    HUANLUYENVIEN.MAHLV,
    HUANLUYENVIEN.TENHLV,
    HUANLUYENVIEN.NGAYSINH,
    HUANLUYENVIEN.DIACHI,
    HLV_CLB.VAITRO,
    CAULACBO.TENCLB
FROM 
    HUANLUYENVIEN
JOIN 
    HLV_CLB ON HUANLUYENVIEN.MAHLV = HLV_CLB.MAHLV
JOIN 
    CAULACBO ON HLV_CLB.MACLB = CAULACBO.MACLB
WHERE 
    HUANLUYENVIEN.MAQG = 'VN';

--30. Thông tin câu lạc bộ và số lượng cầu thủ nước ngoài
CREATE VIEW V_CLB_NGOAINGU AS
SELECT 
    CAULACBO.MACLB,
    CAULACBO.TENCLB,
    SANVD.TENSAN,
    SANVD.DIACHI,
    COUNT(CAUTHU.MACT) AS SO_LUONG_CAUTHU_NGOAI
FROM 
    CAULACBO
JOIN 
    SANVD ON CAULACBO.MASAN = SANVD.MASAN
LEFT JOIN 
    CAUTHU ON CAULACBO.MACLB = CAUTHU.MACLB AND CAUTHU.MAQG <> 'VN'
GROUP BY 
    CAULACBO.MACLB, CAULACBO.TENCLB, SANVD.TENSAN, SANVD.DIACHI
HAVING 
    COUNT(CAUTHU.MACT) > 2;

--31. Tên tỉnh và số lượng cầu thủ tiền đạo
CREATE VIEW V_TINH_CAUTHU_TIENDAU AS
SELECT 
    TINH.TENTINH,
    COUNT(CAUTHU.MACT) AS SO_LUONG_TIENDAU
FROM 
    CAUTHU
JOIN 
    CAULACBO ON CAUTHU.MACLB = CAULACBO.MACLB
JOIN 
    TINH ON CAULACBO.MATINH = TINH.MATINH
WHERE 
    CAUTHU.VITRI = N'Tiền Đạo'
GROUP BY 
    TINH.TENTINH;

--32. Câu lạc bộ có vị trí cao nhất ở vòng 3, năm 2009
CREATE VIEW V_CLB_VITRI_CAO_NHAT_VONG3_2009 AS
SELECT 
    CAULACBO.TENCLB,
    TINH.TENTINH
FROM 
    BANGXH
JOIN 
    CAULACBO ON BANGXH.MACLB = CAULACBO.MACLB
JOIN 
    TINH ON CAULACBO.MATINH = TINH.MATINH
WHERE 
    BANGXH.NAM = 2009 AND BANGXH.VONG = 3
ORDER BY 
    BANGXH.HANG ASC
OFFSET 0 ROWS FETCH NEXT 1 ROWS ONLY;  -- Lấy vị trí cao nhất

--33. Huấn luyện viên không có số điện thoại
CREATE VIEW V_HLV_KHONG_DIENTHOAI AS
SELECT 
    HUANLUYENVIEN.MAHLV,
    HUANLUYENVIEN.TENHLV
FROM 
    HUANLUYENVIEN
WHERE 
    HUANLUYENVIEN.DIENTHOAI IS NULL OR HUANLUYENVIEN.DIENTHOAI = 'NULL';


--CÂU 35
CREATE PROCEDURE ChaoTen
    @ten NVARCHAR(50) 
AS
BEGIN
    PRINT N'Xin chào ' + @ten;
END;
GO

--CÂU 36
CREATE PROCEDURE TG(@S1 INT, @S2 INT)
AS
BEGIN
    DECLARE @TG INT;
    SET @TG = @S1 + @S2;
    PRINT N'Tổng là: ' + CAST(@TG AS NVARCHAR(50));
	EXEC TG 2, 3;
END;
GO

--CÂU 37
CREATE PROCEDURE TONG(@S1 INT, @S2 INT, @T INT OUTPUT)
AS
BEGIN
    SET @T = @S1 + @S2;

    PRINT N'Tổng là: ' + CAST(@T AS NVARCHAR(50));
END;
GO

DECLARE @TG INT;
SET @TG = 0;

EXECUTE TONG 2, 3, @TG OUTPUT;

SELECT @TG AS TONG2SO;

GO

--CÂU 38
CREATE PROCEDURE SOMAX(@S1 INT, @S2 INT, @MAX INT OUTPUT)
AS 
BEGIN
	SET @S1 = 20;
	SET @S2  = 30;

	SET @MAX = CASE WHEN @S1 > @S2 THEN @S1 ELSE @S2 END;

PRINT N'Số lớn nhất của : ' + CAST(@S1 AS NVARCHAR(50)) + N' và ' + CAST(@S2 AS NVARCHAR(50)) + N' là ' + CAST(@MAX AS NVARCHAR(50));
END;
GO

--CÂU 39
CREATE PROCEDURE MINVAMAX(@S1 INT, @S2 INT, @MAX INT, @MIN INT) 
AS 
BEGIN
	SET @MAX = CASE WHEN @S1 > @S2 THEN @S1 ELSE @S2 END;
	SET @MIN = CASE WHEN @S1 < @S2 THEN @S1 ELSE @S2 END;
PRINT N'Số lớn nhất của : ' + CAST(@S1 AS NVARCHAR(50)) + N' và ' + CAST(@S2 AS NVARCHAR(50)) + N' là ' + CAST(@MAX AS NVARCHAR(50));
PRINT N'Số nhỏ nhất của : ' + CAST(@S1 AS NVARCHAR(50)) + N' và ' + CAST(@S2 AS NVARCHAR(50)) + N' là ' + CAST(@MIN AS NVARCHAR(50));
END;
GO

--CÂU 40
CREATE PROCEDURE DEMSO
	@N INT 
AS 
BEGIN
	DECLARE @I INT

	SET @I = 1;
	WHILE @I < @N 
	BEGIN 
		PRINT @I;
		SET @I = @I + 1;
	END
EXEC DEMSO @N = 10;
END;
GO

--CÂU 41
CREATE PROCEDURE DEMSOCHAN(@N INT, @I INT, @SUM INT OUTPUT)
AS 
BEGIN
	SET @SUM = 0
	WHILE @I < @N
	BEGIN	
		IF @I % 2 = 0
		BEGIN
			SET @SUM = @SUM + @I;
		END
		PRINT N'Tổng hiện tại : ' + CAST(@SUM AS NVARCHAR(50));
		SET @I = @I + 1;
	END
END;
GO

DECLARE @Total INT;
EXEC DEMSOCHAN @N = 10, @I = 1, @SUM = @Total OUTPUT;
PRINT N'Tổng các số chẵn từ 1 đến 10 là: ' + CAST(@Total AS NVARCHAR(50));
